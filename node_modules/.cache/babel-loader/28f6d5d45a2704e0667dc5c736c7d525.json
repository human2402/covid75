{"ast":null,"code":"import _slicedToArray from\"/home/human2402/myFolder/covid75/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';var LocalDataElement=function LocalDataElement(props){var _useState=useState([false,[]]),_useState2=_slicedToArray(_useState,2),localData=_useState2[0],setLocalData=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),updateTime=_useState4[0],setUpdateTime=_useState4[1];// FETCH DATA\nuseEffect(function(){fetchLocalData();},[]);var fetchLocalData=function fetchLocalData(){fetch('https://api.apify.com/v2/key-value-stores/1brJ0NLbQaJKPTWMO/records/LATEST?disableRedirect=true').then(function(response){return response.json();}).then(function(result){setLocalData([true,result.infectedByRegion[50]]);setUpdateTime(result.lastUpdatedAtSource.toString().slice(0,-14));}).catch(function(error){console.error(error);});};// VAR ELEMENTS\nvar updateDownload=null;if(localData[0]===true){var date=new Date(updateTime);var day=date.getDate();if(day<10)day='0'+day;var month=date.getMonth()+1;if(month<10)month='0'+month;updateDownload=\"\".concat(day,\".\").concat(month,\".\").concat(date.getFullYear());}return/*#__PURE__*/React.createElement(\"div\",{style:{backgroundColor:'#fdfdfd',margin:'10%'}},/*#__PURE__*/React.createElement(\"h3\",null,\"\\u0417\\u0430\\u0431\\u043E\\u043B\\u0435\\u0432\\u0448\\u0438\\u0445:\"),/*#__PURE__*/React.createElement(\"h5\",null,localData[1].infected),/*#__PURE__*/React.createElement(\"h6\",null,\"\\u041E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043E \",updateDownload));};export default LocalDataElement;","map":{"version":3,"sources":["/home/human2402/myFolder/covid75/src/com/localData/LocalDataElement.js"],"names":["React","useState","useEffect","LocalDataElement","props","localData","setLocalData","updateTime","setUpdateTime","fetchLocalData","fetch","then","response","json","result","infectedByRegion","lastUpdatedAtSource","toString","slice","catch","error","console","updateDownload","date","Date","day","getDate","month","getMonth","getFullYear","backgroundColor","margin","infected"],"mappings":"mHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,eAEEH,QAAQ,CAAE,CAAC,KAAD,CAAQ,EAAR,CAAF,CAFV,wCAEzBI,SAFyB,eAEdC,YAFc,8BAGIL,QAAQ,EAHZ,yCAGzBM,UAHyB,eAGbC,aAHa,eAKhC;AACAN,SAAS,CAAE,UAAM,CACbO,cAAc,GACjB,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzBC,KAAK,CAAE,iGAAF,CAAL,CACCC,IADD,CACO,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADf,EAECF,IAFD,CAEO,SAAAG,MAAM,CAAI,CACbR,YAAY,CAAE,CAAC,IAAD,CAAOQ,MAAM,CAACC,gBAAP,CAAwB,EAAxB,CAAP,CAAF,CAAZ,CACAP,aAAa,CAAEM,MAAM,CAACE,mBAAP,CAA2BC,QAA3B,GAAsCC,KAAtC,CAA6C,CAA7C,CAAgD,CAAC,EAAjD,CAAF,CAAb,CACH,CALD,EAMCC,KAND,CAMQ,SAAAC,KAAK,CAAI,CACbC,OAAO,CAACD,KAAR,CAAeA,KAAf,EACH,CARD,EASH,CAVD,CAYA;AACA,GAAIE,CAAAA,cAAc,CAAG,IAArB,CACA,GAAIjB,SAAS,CAAC,CAAD,CAAT,GAAiB,IAArB,CAA2B,CACvB,GAAIkB,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAAUjB,UAAV,CAAX,CACA,GAAIkB,CAAAA,GAAG,CAAIF,IAAI,CAACG,OAAL,EAAX,CACI,GAAID,GAAG,CAAG,EAAV,CAAcA,GAAG,CAAG,IAAMA,GAAZ,CAClB,GAAIE,CAAAA,KAAK,CAAGJ,IAAI,CAACK,QAAL,GAAmB,CAA/B,CACI,GAAID,KAAK,CAAG,EAAZ,CAAgBA,KAAK,CAAG,IAAMA,KAAd,CACpBL,cAAc,WAAMG,GAAN,aAAaE,KAAb,aAAsBJ,IAAI,CAACM,WAAL,EAAtB,CAAd,CACH,CAED,mBACI,2BACI,KAAK,CAAI,CACTC,eAAe,CAAE,SADR,CACkBC,MAAM,CAAE,KAD1B,CADb,eAKI,8FALJ,cAMI,8BAAK1B,SAAS,CAAC,CAAD,CAAT,CAAa2B,QAAlB,CANJ,cAOI,wFAAeV,cAAf,CAPJ,CADJ,CAWH,CA5CD,CA8CA,cAAenB,CAAAA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst LocalDataElement = (props) => {\n\n    const [localData, setLocalData] = useState ([false, []])\n    const [updateTime, setUpdateTime] = useState ()\n\n    // FETCH DATA\n    useEffect (() => {\n        fetchLocalData ()\n    }, [])\n\n    const fetchLocalData = () => {\n        fetch ('https://api.apify.com/v2/key-value-stores/1brJ0NLbQaJKPTWMO/records/LATEST?disableRedirect=true')\n        .then (response => response.json())\n        .then (result => {\n            setLocalData ([true, result.infectedByRegion[50]])\n            setUpdateTime (result.lastUpdatedAtSource.toString().slice (0, -14))\n        })\n        .catch (error => {\n            console.error (error)\n        })\n    }\n\n    // VAR ELEMENTS\n    let updateDownload = null\n    if (localData[0] === true) {\n        let date = new Date (updateTime)\n        let day =  date.getDate ()\n            if (day < 10) day = '0' + day\n        let month = date.getMonth () + 1\n            if (month < 10) month = '0' + month\n        updateDownload = `${day}.${month}.${date.getFullYear()}`\n    }\n\n    return (\n        <div\n            style = {{\n            backgroundColor: '#fdfdfd',margin: '10%'\n            }}\n        >\n            <h3>Заболевших:</h3>\n            <h5>{localData[1].infected}</h5>\n            <h6>Обновлено {updateDownload}</h6>\n        </div>\n    )\n}\n\nexport default LocalDataElement\n"]},"metadata":{},"sourceType":"module"}