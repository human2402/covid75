{"ast":null,"code":"var _jsxFileName = \"/home/human2402/myFolder/covid75/src/com/middleStuff/tabs/tab2com/Global.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Global = prop => {\n  const [upadteDate, setUpdateDate] = useState();\n  const [totalInfected, setTotalInfected] = useState();\n  const [minCountry, setMinCountry] = useState([]);\n  const [maxCountry, setMaxCountry] = useState([]); //BACK END STUFF\n\n  useEffect(() => backEnd(), []);\n  useEffect(() => {\n    consoling();\n    checker();\n  }, [maxCountry]);\n\n  const checker = () => {\n    if (minCountry[0] === undefined) {\n      backEnd();\n    }\n  };\n\n  const backEnd = () => {\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch('https://api.covid19api.com/summary', requestOptions).then(response => response.json()).then(result => {\n      resulting(result);\n    }).catch(error => console.error(error));\n  };\n\n  const resulting = data => {\n    let coolTime = formatTime(data.Date);\n    setUpdateDate(coolTime);\n    setTotalInfected(data.Global.TotalConfirmed);\n    calcMore(data.Countries, 'min');\n    calcMore(data.Countries, 'max');\n  };\n\n  const formatTime = time => {\n    let sliced = time.slice(0, 10);\n    let date = new Date(sliced);\n    let day = date.getDate();\n    if (day < 10) day = '0' + day;\n    let month = date.getMonth() + 1;\n    if (month < 10) month = '0' + month;\n    let result = `${day}.${month}`;\n    return result;\n  };\n\n  const calcMore = async (countries, pos) => {\n    console.log(countries);\n    let numArray = [];\n    countries.map((item, index) => {\n      let num = item.TotalConfirmed;\n      if (numArray.indexOf(num) === -1 | index === 0) numArray.push(num);\n    });\n    let minNum;\n    if (pos === 'min') minNum = Math.min(...numArray);\n    if (pos === 'max') minNum = Math.max(...numArray);\n    let winIndex = numArray.indexOf(minNum);\n    let winCountry;\n    countries.map((item, index) => {\n      console.log(`index ${index}`);\n      if (index === winIndex) winCountry = item;\n    });\n    console.log(winIndex);\n    let shorter = await toShort(winCountry.CountryCode);\n    const finalArray = [shorter, winCountry.TotalConfirmed, winCountry.CountryCode];\n    if (pos === 'min') setMinCountry(finalArray);\n    if (pos === 'max') setMaxCountry(finalArray);\n  };\n\n  const toShort = async code => {\n    let finalResult = 1;\n    var url = \"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/country\";\n    var token = \"64338c022bb3d954343cf4b5375960258a5d2524\";\n    var query = code;\n    var options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": \"Token \" + token\n      },\n      body: JSON.stringify({\n        query: query\n      })\n    };\n    await fetch(url, options).then(response => response.json()).then(result => {\n      finalResult = result.suggestions[0].data.name_short; //console.log (finalResult)\n\n      return finalResult;\n    }).catch(error => console.log(\"error\", error));\n    return finalResult;\n  };\n\n  const consoling = () => {\n    if (maxCountry !== undefined) {\n      console.log(`Updated on ${upadteDate}`);\n      console.log(`Total infected: ${totalInfected}`);\n      console.log(`The less infected country is ${minCountry[0]} (${minCountry[2]}) with total ${minCountry[1]} confirmed cases`);\n      console.log(`The most infeceted country is ${maxCountry[0]} (${maxCountry[2]}) with total ${maxCountry[1]} confirmed cases`);\n    }\n  }; //VARS\n\n\n  let mainTrans = '-110';\n  if (prop.isOpen) mainTrans = '0'; //STYLES\n\n  const upperPS = {\n    margin: '3vh 0 0 0',\n    fontSize: '3vh',\n    fontWeight: '400'\n  };\n  const imgContainerS = {\n    width: '20%',\n    margin: '0 0 0 5%',\n    display: 'grid',\n    placeItems: 'center'\n  };\n  const imgS = {\n    width: '100%'\n  };\n  const infoContainerS = {\n    margin: '0 5%',\n    width: '70%'\n  };\n  const countryNamePS = {\n    fontSize: '3.2vh',\n    fontWeight: '400',\n    margin: '1vh 0 0 0',\n    lineHeight: '1.2',\n    fontWeight: '300'\n  };\n  const numPS = {\n    fontSize: '3.5vh',\n    margin: '0.7vh 0 2vh 0',\n    lineHeight: 1\n  };\n  const chS = {\n    fontWeight: '300'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '77%',\n      margin: '0 auto',\n      transform: `translateY(${mainTrans}%)`,\n      transition: 'transform 0.4s ease'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: { ...upperPS,\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, \"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0437\\u0430\\u0440\\u0430\\u0436\\u0435\\u043D\\u043E:\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: '1vh 0 0 0',\n      fontSize: '3.4vh',\n      backgroundColor: '#b7b7b7',\n      padding: '0 5%',\n      borderRadius: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 6\n    }\n  }, totalInfected, \" \\u0447.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#ffffff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '2.5vh',\n      borderRadius: '20px 20px 0 0',\n      width: '100%',\n      backgroundColor: '#a73b3b',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: imgContainerS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: imgS,\n    src: `https://www.countryflags.io/${maxCountry[2]}/shiny/64.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: infoContainerS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: countryNamePS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, maxCountry[0]), /*#__PURE__*/React.createElement(\"p\", {\n    style: numPS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, maxCountry[1], \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: chS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 24\n    }\n  }, \"\\u0447.\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderRadius: '0 0 20px 20px',\n      width: '100%',\n      backgroundColor: '#519c37',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: imgContainerS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: imgS,\n    src: `https://www.countryflags.io/${minCountry[2]}/shiny/64.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: infoContainerS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: countryNamePS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, minCountry[0]), /*#__PURE__*/React.createElement(\"p\", {\n    style: numPS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, minCountry[1], \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: chS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 24\n    }\n  }, \"\\u0447.\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: '2vh',\n      color: '#000',\n      margin: '0.5vh 5% 0.7vh 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: chS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, \" \\u041E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043E\"), \" \", upadteDate))));\n};\n\nexport default Global;","map":{"version":3,"sources":["/home/human2402/myFolder/covid75/src/com/middleStuff/tabs/tab2com/Global.js"],"names":["React","useState","useEffect","Global","prop","upadteDate","setUpdateDate","totalInfected","setTotalInfected","minCountry","setMinCountry","maxCountry","setMaxCountry","backEnd","consoling","checker","undefined","requestOptions","method","redirect","fetch","then","response","json","result","resulting","catch","error","console","data","coolTime","formatTime","Date","TotalConfirmed","calcMore","Countries","time","sliced","slice","date","day","getDate","month","getMonth","countries","pos","log","numArray","map","item","index","num","indexOf","push","minNum","Math","min","max","winIndex","winCountry","shorter","toShort","CountryCode","finalArray","code","finalResult","url","token","query","options","mode","headers","body","JSON","stringify","suggestions","name_short","mainTrans","isOpen","upperPS","margin","fontSize","fontWeight","imgContainerS","width","display","placeItems","imgS","infoContainerS","countryNamePS","lineHeight","numPS","chS","transform","transition","justifyContent","backgroundColor","padding","borderRadius","color","marginTop"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect} from 'react'\n\nconst Global = (prop) => {\t\n\n\tconst [upadteDate, setUpdateDate] = useState ()\n\tconst [totalInfected, setTotalInfected] = useState ()\n\tconst [minCountry, setMinCountry] = useState ([])\n\tconst [maxCountry, setMaxCountry] = useState ([])\n\n\t//BACK END STUFF\n\tuseEffect (() => backEnd(), [])\n\n\tuseEffect (() => {\n\t\tconsoling()\n\t\tchecker()\n\t}, [maxCountry])\n\n\tconst checker = () => {\n\t\tif (minCountry[0] === undefined) {\n\t\t\tbackEnd ()\n\t\t}\n\t}\n\n\tconst backEnd = () => {\n\t\tconst requestOptions = {\n\t\t\tmethod: 'GET',\n\t\t\tredirect: 'follow'\n\t\t}\n\t\tfetch('https://api.covid19api.com/summary', requestOptions)\n\t\t\t.then (response => response.json())\n\t\t\t.then (result => {\n\t\t\t\tresulting (result)\n\t\t\t})\n\t\t\t.catch(error => console.error (error))\n\t}\n\n\tconst resulting = (data) => {\n\t\tlet coolTime = formatTime (data.Date)\n\t\tsetUpdateDate (coolTime)\n\t\tsetTotalInfected (data.Global.TotalConfirmed)\n\t\tcalcMore (data.Countries, 'min')\n\t\tcalcMore (data.Countries, 'max')\n\t}\n\n\tconst formatTime = (time) => {\n\t\tlet sliced = time.slice(0, 10)\n\t\tlet date = new Date (sliced)\n\t\tlet day =  date.getDate ()\n            if (day < 10) day = '0' + day\n        let month = date.getMonth () + 1\n            if (month < 10) month = '0' + month\n        let result = `${day}.${month}`\n\n\t\treturn result\n\t}\n\n\tconst calcMore = async (countries, pos) => {\n\t\tconsole.log (countries)\n\n\t\tlet numArray = []\n\t\tcountries.map ((item, index) => {\n\t\t\tlet num = item.TotalConfirmed\n\t\t\tif (numArray.indexOf(num) === -1 | index === 0) numArray.push (num)\n\t\t} )\n\t\tlet minNum\n\t\tif (pos === 'min') minNum = Math.min (...numArray)\n\t\tif (pos === 'max') minNum =\tMath.max (...numArray)\n\t\tlet winIndex = numArray.indexOf (minNum)\n\t\tlet winCountry\n\t\tcountries.map ((item, index) => {\n\t\t\tconsole.log (`index ${index}`)\n\t\t\tif (index === winIndex) winCountry = item\n\t\t})\n\n\t\tconsole.log (winIndex)\n\n\t\tlet shorter = await toShort(winCountry.CountryCode)\n\n\t\tconst finalArray = [shorter, winCountry.TotalConfirmed ,winCountry.CountryCode]\n\n\t\tif (pos === 'min') setMinCountry (finalArray)\n\t\tif (pos === 'max') setMaxCountry (finalArray)\n\n\t}\n\n\tconst toShort = async (code) => {\n\t\tlet finalResult = 1\n\t\tvar url = \"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/country\";\n\t\tvar token = \"64338c022bb3d954343cf4b5375960258a5d2524\";\n\t\tvar query = code;\n\n\t\tvar options = {\n\t\t    method: \"POST\",\n\t\t    mode: \"cors\",\n\t\t    headers: {\n\t\t        \"Content-Type\": \"application/json\",\n\t\t        \"Accept\": \"application/json\",\n\t\t        \"Authorization\": \"Token \" + token\n\t\t    },\n\t\t    body: JSON.stringify({query: query})\n\t\t}\n\n\t\tawait fetch(url, options)\n\t\t.then(response => response.json())\n\t\t.then(result => {\n\t\t\tfinalResult = result.suggestions[0].data.name_short\n\t\t\t//console.log (finalResult)\n\t\t\treturn finalResult\n\t\t})\n\t\t.catch(error => console.log(\"error\", error))\n\n\t\treturn finalResult\n\t}\n\n\tconst consoling = () => {\n\t\tif (maxCountry !== undefined) {\n\t\t\tconsole.log (`Updated on ${upadteDate}`)\n\t\t\tconsole.log (`Total infected: ${totalInfected}`)\n\t\t\tconsole.log (`The less infected country is ${minCountry[0]} (${minCountry[2]}) with total ${minCountry[1]} confirmed cases`)\n\t\t\tconsole.log (`The most infeceted country is ${maxCountry[0]} (${maxCountry[2]}) with total ${maxCountry[1]} confirmed cases`)\n\t\t}\n\t}\n\n\t//VARS\n\tlet mainTrans = '-110'\n\tif (prop.isOpen) mainTrans = '0'\n\n\t//STYLES\n\tconst upperPS = {\n\t\tmargin: '3vh 0 0 0', fontSize: '3vh', fontWeight: '400'\n\t}\n\t\n\tconst imgContainerS = {\n\t\twidth: '20%',\n\t\tmargin: '0 0 0 5%',\n\t\tdisplay: 'grid',\n\t\tplaceItems: 'center'\n\t}\n\tconst imgS = {\n\t\twidth: '100%'\n\t}\n\tconst infoContainerS = {\n\t\tmargin: '0 5%', width: '70%'\n\t}\n\tconst countryNamePS = {\n\t\tfontSize: '3.2vh', fontWeight: '400', margin: '1vh 0 0 0', lineHeight: '1.2', fontWeight: '300'\n\t}\n\tconst numPS = {\n\t\tfontSize: '3.5vh', margin: '0.7vh 0 2vh 0', lineHeight: 1\n\t}\n\tconst chS = {\n\t\tfontWeight: '300'\n\t}\n\n\treturn (\n\t\t<div style = {{width: '77%', margin: '0 auto' ,transform: `translateY(${mainTrans}%)`, transition: 'transform 0.4s ease'}}>\n\t\t\t<div>\n\t\t\t\t<p style = {{...upperPS, margin: '0'}}>\n\t\t\t\t\tВсего заражено:\n\t\t\t\t</p>\n\t\t\t\t<div style = {{display: 'flex', justifyContent: 'flex-end'}}>\n\t\t\t\t\t<p style = {{margin: '1vh 0 0 0', fontSize: '3.4vh', backgroundColor: '#b7b7b7', padding: '0 5%', borderRadius: '10px'}}> \n\t\t\t\t\t\t{totalInfected} ч.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style = {{color: '#ffffff'}}>\n\t\t\t\t<div style = {{marginTop: '2.5vh' ,borderRadius: '20px 20px 0 0' ,width: '100%', backgroundColor: '#a73b3b', display: 'flex'}}>\n\t\t\t\t\t<div style = {imgContainerS}>\n\t\t\t\t\t\t<img style = {imgS} src = {`https://www.countryflags.io/${maxCountry[2]}/shiny/64.png`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style = {infoContainerS}>  \n\t\t\t\t\t\t<p style = {countryNamePS}>\n\t\t\t\t\t\t\t{maxCountry[0]}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p style = {numPS}> \n\t\t\t\t\t\t\t{maxCountry[1]} <span style = {chS}>ч.</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style = {{borderRadius: '0 0 20px 20px' ,width: '100%', backgroundColor: '#519c37', display: 'flex'}}>\n\t\t\t\t\t<div style = {imgContainerS}>\n\t\t\t\t\t\t<img style = {imgS} src = {`https://www.countryflags.io/${minCountry[2]}/shiny/64.png`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style = {infoContainerS}>  \n\t\t\t\t\t\t<p style = {countryNamePS}>\n\t\t\t\t\t\t\t{minCountry[0]}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p style = {numPS}> \n\t\t\t\t\t\t\t{minCountry[1]} <span style = {chS}>ч.</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style = {{display: 'flex', justifyContent: 'flex-end'}}>\n\t\t\t\t\t<p style = {{fontSize: '2vh', color: '#000', margin: '0.5vh 5% 0.7vh 0'}}> \n\t\t\t\t\t\t<span style = {chS}> Обновлено</span> {upadteDate}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Global"]},"metadata":{},"sourceType":"module"}